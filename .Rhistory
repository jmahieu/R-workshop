library tidyverse
library(tidyverse)
mtcars <- mtcars
View(mtcars)
write_csv(mtcarse, "mtcars.csv")
write_csv(mtcars, "mtcars.csv")
View(mtcars)
?write_csv
write.csv(mtcars, "mtcars.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("C:/Users/jeroe/Dropbox/VU teaching/Quantitative Research Methods/2021-2022/R/images/mtcars.jpg")
knitr::include_graphics("C:/Users/jeroe/Dropbox/VU teaching/Quantitative Research Methods/2021-2022/R/images/console.jpg")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/jeroe/Dropbox/VU teaching/Quantitative Research Methods/2021-2022/R/")
knitr::include_graphics("images/console.jpg")
library(tidyverse)
mtcars <- read_csv("data/ mtcars.csv")
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv")
View(mtcars)
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv")
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv")
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv")
?read_csv
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv", delim = ',')
library(tidyverse)
mtcars <- read_delim("data/mtcars.csv", delim = ',')
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv", col_names = TRUE)
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv", col_names = TRUE)
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv")
library(tidyverse)
mtcars <- read_csv("data/mtcars.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages("blogdown")
blogdown::install_hugo()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown::install_hugo()
library(blogdown)
install.packages("xfun")
blogdown::install_hugo()
blogdown::new_site(theme = "user/repo", theme_example = TRUE)
install.packages(c("arm", "backports", "bayestestR", "BH", "blob", "BMisc", "broom", "callr", "car", "carData", "CBPS", "cli", "clipr", "collapse", "colorspace", "conquer", "corrplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "desc", "did", "digest", "dplyr", "DRDID", "e1071", "effectsize", "ellipsis", "emmeans", "expss", "fansi", "farver", "flextable", "forcats", "foreach", "formatR", "Formula", "fs", "gdtools", "generics", "geosphere", "ggeffects", "ggplot2", "ggsignif", "glmnet", "glue", "haven", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "insight", "isoband", "iterators", "jpeg", "jsonlite", "kableExtra", "labeling", "labelled", "lfe", "lifecycle", "lme4", "lmtest", "loadr", "lubridate", "magick", "magrittr", "maptools", "Matching", "MatchIt", "matrixStats", "maxLik", "mime", "modelsummary", "mvtnorm", "nloptr", "officer", "openssl", "openxlsx", "pander", "PanelMatch", "parameters", "pbapply", "performance", "pillar", "pkgbuild", "pkgload", "plm", "processx", "pryr", "ps", "pushoverr", "quantreg", "R6", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "reprex", "rio", "rJava", "rlang", "rprojroot", "rstudioapi", "rvest", "sandwich", "sf", "shape", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "statmod", "stringdist", "stringi", "summarytools", "systemfonts", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tsibble", "units", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "withr", "xfun", "XML", "xml2", "yaml", "zip", "zoo"))
install.packages(c("arm", "backports", "bayestestR", "BH", "blob", "BMisc", "broom", "callr", "car", "carData", "CBPS", "cli", "clipr", "collapse", "colorspace", "conquer", "corrplot", "cpp11", "crayon", "curl", "data.table", "DBI", "dbplyr", "desc", "did", "digest", "dplyr", "DRDID", "e1071", "effectsize", "ellipsis", "emmeans", "expss", "fansi", "farver", "flextable", "forcats", "foreach", "formatR", "Formula", "fs", "gdtools", "generics", "geosphere", "ggeffects", "ggplot2", "ggsignif", "glmnet", "glue", "haven", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "insight", "isoband", "iterators", "jpeg", "jsonlite", "kableExtra", "labeling", "labelled", "lfe", "lifecycle", "lme4", "lmtest", "loadr", "lubridate", "magick", "magrittr", "maptools", "Matching", "MatchIt", "matrixStats", "maxLik", "mime", "modelsummary", "mvtnorm", "nloptr", "officer", "openssl", "openxlsx", "pander", "PanelMatch", "parameters", "pbapply", "performance", "pillar", "pkgbuild", "pkgload", "plm", "processx", "pryr", "ps", "pushoverr", "quantreg", "R6", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "reprex", "rio", "rJava", "rlang", "rprojroot", "rstudioapi", "rvest", "sandwich", "sf", "shape", "sjlabelled", "sjmisc", "sjPlot", "sjstats", "sp", "statmod", "stringdist", "stringi", "summarytools", "systemfonts", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tsibble", "units", "utf8", "uuid", "vctrs", "viridis", "viridisLite", "withr", "xfun", "XML", "xml2", "yaml", "zip", "zoo"))
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
install.packages("remotes")
remotes::install_github("jhelvy/xaringanBuilder")
getwd()
getwd()
install.packages("emoji")
library(emoji)
?emoji
emoji("taco")
xaringan:::list_css()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
library(tidyverse)
library(stargazer)
library(emoji)
str(wine)
str(wine)
library(tidyverse)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
str(wine)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
library(tidyverse)
library(stargazer)
library(emoji)
library(tidyverse)
wine <- read_csv("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
str(wine)
library(tidyverse)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
head(wine[,1:6]) # show first 6 lines of first 6 variables
str(wine)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
knitr::include_graphics("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/images/data-science-pipeline.png")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
rm(list=ls())
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
library(tidyverse)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
head(wine[,1:6]) # show first 6 lines of first 6 variables
xaringan::inf_mr()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
rm(list=ls())
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
library(tidyverse)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
head(wine[,1:6]) # show first 6 lines of first 6 variables
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
wine %>%
filter(samplesize > 2000) #<<
View(wine)
mean(alcohol)
mean(wine$alcohol)
wine %>%
filter(alcohol > 10) #<<
wine %>%
filter(alcohol > 10) #<<
mean(wine$`volatile acidity`)
mean(wine$`fixed acidity`)
wine %>%
mutate('total acidity'= 'fixed acidity' + 'volatile acidity' )
wine %>%
mutate('total acidity'= 'fixed acidity' + 'volatile acidity' ) #<<
wine %>%
mutate(total acidity= fixed acidity + volatile acidity )
wine %>%
mutate('total acidity' = fixed acidity + volatile acidity )
wine %>%
mutate('total acidity' = 'fixed acidity' + 'volatile acidity' )
names(wine)
wine %>%
mutate('total acidity' = quality )
wine %>%
mutate('total acidity'= quality + 1 ) #<<
wine %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`) #<<
wine %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`)
View(wine[, c('total acidity', 'fixed acidity', 'volatile acidity')])
?View
wine2 <- wine  %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`)
wine2 <- wine  %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`)
str(wine2)
devtools::install_github("gadenbuie/countdown")
install.packages('devtools')
devtools::install_github("gadenbuie/countdown")
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
#load the necessary packages
library(tidyverse)
library(stargazer)
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("data/winequality-red.csv") #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# Task 1: Data Wrangling
# 1. Create a new variable called 'low_quality' == 1 if the quality of the wine == 3 *or* == 4.
# Save the new dataset again as 'wine'
wine <- wine %>%
mutate(low_quality = (quality < 4) )
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("data/winequality-red.csv") #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# Task 1: Data Wrangling
# 1. Create a new variable called 'low_quality' == 1 if the quality of the wine == 3 *or* == 4.
# Save the new dataset again as 'wine'
wine <- wine %>%
mutate(low_quality = (quality < 4) )
View(wine)
library(haven)
library(foreign)
?read_spss
source("~/.active-rstudio-document", echo=TRUE)
install.packages("emoji")
install.packages("Rtools")
install.packages("emoji")
install.packages("countdown")
install.packages("devtools")
devtools::install_github("gadenbuie/countdown")
install.packages("utf8")
update.packages(ask = FALSE, checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("xaringan")
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("pandoc")
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("installr")
install.pandoc()
library(installr)
install.pandoc()
rm(list)
rm()
gc()
rm(list=ls())
gc()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
library(countdown)
# countdown style
countdown(
color_border              = "#d90502",
color_text                = "black",
color_running_background  = "#d90502",
color_running_text        = "white",
color_finished_background = "white",
color_finished_text       = "#d90502",
color_finished_border     = "#d90502"
)
3 %in% 1:3
c(2,5) %in% 2:10  # also vectorized
c("V","Uni") %in% c("Vrije","Universiteit")  # also strings
library(stargazer)
wine <- as.data.frame(wine)
stargazer(wine,
type = 'html',
out='wine_summary.html',
title= 'Descriptive Statistics')
knitr::include_graphics("images/wine-summary.jpg")
rm(list=ls())
getwd()
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('/data/winequaltiy-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('/data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
wine %>%
group_by(hi_sugar) %>%
summarise(mean_chlorides = mean(chlorides),
max_density = max(density))
View(wine)
wine <- wine %>%
mutate(hi_sugar = ("residual sugar" >= 2))
wine %>%
group_by(hi_sugar) %>%
summarise(mean_chlorides = mean(chlorides),
max_density = max(density))
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
wine <- wine %>%
mutate(hi_sugar = ("residual sugar" >= 2))
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# Task 1: Data Wrangling
# 1. Which wines have a `quality` of 3 or 6?
# 2. Create a new variable called `hi_sugar` which is `TRUE` if `residual sugar >= 2 `
# Save the new dataset again as 'wine'
wine <- wine %>%
mutate(hi_sugar = (`residual sugar` >= 2))
# 3. Calculate the mean chlorides and maximum density by `hi_sugar` group. Use `mean()` and `max()`
wine %>%
group_by(hi_sugar) %>%
summarise(mean_chlorides = mean(chlorides),
max_density = max(density))
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
wine %>%
filter(alcohol > 10)
wine2 <- wine %>%
mutate(`total acidity` = `fixed acidity` + `volatile acidity`)
View(wine2)
wine <- wine %>%
mutate(`total acidity` = `fixed acidity` + `volatile acidity`)
View(wine)
?stargazer
