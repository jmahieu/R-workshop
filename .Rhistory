warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
knitr::include_graphics("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/images/data-science-pipeline.png")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
rm(list=ls())
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
library(tidyverse)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
head(wine[,1:6]) # show first 6 lines of first 6 variables
xaringan::inf_mr()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
knitr::opts_knit$set(root.dir = normalizePath("C:/Users/jeroe/Dropbox/VU teaching/R-workshop"))
rm(list=ls())
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("C:/Users/jeroe/Dropbox/VU teaching/R-workshop/data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
library(tidyverse)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
head(wine[,1:6]) # show first 6 lines of first 6 variables
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
wine <- as_tibble(wine) # convert to a tibble
wine %>%
filter(samplesize > 2000) #<<
View(wine)
mean(alcohol)
mean(wine$alcohol)
wine %>%
filter(alcohol > 10) #<<
wine %>%
filter(alcohol > 10) #<<
mean(wine$`volatile acidity`)
mean(wine$`fixed acidity`)
wine %>%
mutate('total acidity'= 'fixed acidity' + 'volatile acidity' )
wine %>%
mutate('total acidity'= 'fixed acidity' + 'volatile acidity' ) #<<
wine %>%
mutate(total acidity= fixed acidity + volatile acidity )
wine %>%
mutate('total acidity' = fixed acidity + volatile acidity )
wine %>%
mutate('total acidity' = 'fixed acidity' + 'volatile acidity' )
names(wine)
wine %>%
mutate('total acidity' = quality )
wine %>%
mutate('total acidity'= quality + 1 ) #<<
wine %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`) #<<
wine %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`)
View(wine[, c('total acidity', 'fixed acidity', 'volatile acidity')])
?View
wine2 <- wine  %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`)
wine2 <- wine  %>%
mutate(`total acidity`= `fixed acidity` + `volatile acidity`)
str(wine2)
devtools::install_github("gadenbuie/countdown")
install.packages('devtools')
devtools::install_github("gadenbuie/countdown")
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
#load the necessary packages
library(tidyverse)
library(stargazer)
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("data/winequality-red.csv") #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# Task 1: Data Wrangling
# 1. Create a new variable called 'low_quality' == 1 if the quality of the wine == 3 *or* == 4.
# Save the new dataset again as 'wine'
wine <- wine %>%
mutate(low_quality = (quality < 4) )
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("data/winequality-red.csv") #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# Task 1: Data Wrangling
# 1. Create a new variable called 'low_quality' == 1 if the quality of the wine == 3 *or* == 4.
# Save the new dataset again as 'wine'
wine <- wine %>%
mutate(low_quality = (quality < 4) )
View(wine)
library(haven)
library(foreign)
?read_spss
source("~/.active-rstudio-document", echo=TRUE)
install.packages("emoji")
install.packages("Rtools")
install.packages("emoji")
install.packages("countdown")
install.packages("devtools")
devtools::install_github("gadenbuie/countdown")
install.packages("utf8")
update.packages(ask = FALSE, checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("xaringan")
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("pandoc")
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages("installr")
install.pandoc()
library(installr)
install.pandoc()
rm(list)
rm()
gc()
rm(list=ls())
gc()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
library(countdown)
# countdown style
countdown(
color_border              = "#d90502",
color_text                = "black",
color_running_background  = "#d90502",
color_running_text        = "white",
color_finished_background = "white",
color_finished_text       = "#d90502",
color_finished_border     = "#d90502"
)
3 %in% 1:3
c(2,5) %in% 2:10  # also vectorized
c("V","Uni") %in% c("Vrije","Universiteit")  # also strings
library(stargazer)
wine <- as.data.frame(wine)
stargazer(wine,
type = 'html',
out='wine_summary.html',
title= 'Descriptive Statistics')
knitr::include_graphics("images/wine-summary.jpg")
rm(list=ls())
getwd()
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('/data/winequaltiy-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('/data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
wine %>%
group_by(hi_sugar) %>%
summarise(mean_chlorides = mean(chlorides),
max_density = max(density))
View(wine)
wine <- wine %>%
mutate(hi_sugar = ("residual sugar" >= 2))
wine %>%
group_by(hi_sugar) %>%
summarise(mean_chlorides = mean(chlorides),
max_density = max(density))
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
wine <- wine %>%
mutate(hi_sugar = ("residual sugar" >= 2))
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
# Task 1: Data Wrangling
# 1. Which wines have a `quality` of 3 or 6?
# 2. Create a new variable called `hi_sugar` which is `TRUE` if `residual sugar >= 2 `
# Save the new dataset again as 'wine'
wine <- wine %>%
mutate(hi_sugar = (`residual sugar` >= 2))
# 3. Calculate the mean chlorides and maximum density by `hi_sugar` group. Use `mean()` and `max()`
wine %>%
group_by(hi_sugar) %>%
summarise(mean_chlorides = mean(chlorides),
max_density = max(density))
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv('data/winequality-red.csv') #replace '...' with the location of the csv file!
wine <- as_tibble(wine) # convert to a tibble
wine %>%
filter(alcohol > 10)
wine2 <- wine %>%
mutate(`total acidity` = `fixed acidity` + `volatile acidity`)
View(wine2)
wine <- wine %>%
mutate(`total acidity` = `fixed acidity` + `volatile acidity`)
View(wine)
?stargazer
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("/data/winequality-red.csv") #replace '...' with the location of the csv file!
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("data/winequality-red.csv") #replace '...' with the location of the csv file!
# 1. Regress `pH` on `residual sugar` (so `pH` is the *dependent* variable)
lm(pH ~ `residual sugar`,
data = wine)
summary(wine$`residual sugar`)
print(3.334924 + -0.009379*2)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
dev = "svg",
warning = FALSE,
message = FALSE,
fig.align = "center")
theme_metro <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16),
axis.title.x = element_text(hjust = 1),
axis.title.y = element_text(hjust = 1, angle = 0))
}
theme_metro_regtitle <- function(x) {
theme_classic() +
theme(panel.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
plot.background = element_rect(color = '#FAFAFA',fill='#FAFAFA'),
text = element_text(size = 16))
}
library(tidyverse)
library(stargazer)
library(emoji)
wine <- read_csv("data/winequality-red.csv") #import data as dataframe "wine"
library(countdown)
# countdown style
countdown(
color_border              = "#d90502",
color_text                = "black",
color_running_background  = "#d90502",
color_running_text        = "white",
color_finished_background = "white",
color_finished_text       = "#d90502",
color_finished_border     = "#d90502"
)
# OLS regression of alcohol on fixed acidity
reg <- lm(alcohol ~ `fixed acidity`, wine)
stargazer(reg,
type = "html")
# OLS regression of alcohol on fixed acidity
reg <- lm(alcohol ~ `fixed acidity`, wine)
stargazer(reg,
out = "regression"
type = "html")
# OLS regression of alcohol on fixed acidity
reg <- lm(alcohol ~ `fixed acidity`, wine)
stargazer(reg,
out = "regression",
type = "html")
# OLS regression of alcohol on fixed acidity
reg <- lm(alcohol ~ `fixed acidity`, wine)
stargazer(reg,
out = "regression.html",
type = "html")
knitr::include_graphics("images/regression_alco_acid.jpg")
?lm
stargazer(my_first_regression,
out = "my_first_regression.html",
type = "html")
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("data/winequality-red.csv") #replace '...' with the location of the csv file!
# Task 1: Simple OLS Regression
# 1. Regress `pH` on `residual sugar` (so `pH` is the *dependent* variable)
lm(pH ~ `residual sugar`,
data = wine)
# 2.Using the exact coefficients, calculate the predicted pH value when residual sugar = 2
print(3.334924 + -0.009379*2)
# Task 2: Exporting Simple Regression Output
#1. Regress `pH` on `residual sugar` (so `pH` is the *dependent* variable) and assign the output to an object with a name you prefer.
#Export the output to an html file using the stargazer function
my_first_regression <- lm(pH ~ `residual sugar`,
data = wine)
stargazer(my_first_regression,
out = "my_first_regression.html",
type = "html")
View(wine)
View(wine)
# This is the script with the task instructions for session 1 of the R Workshop
# Only run the line of code below if you have not yet installed the tidyverse and
# stargazer packages (remove the '#' in front to be able to run the code )
# install.packages(c("tidyverse", "stargazer"))
# load the necessary packages
library(tidyverse)
library(stargazer)
# load the wine quality data as a dataframe called 'wine'
wine <- read_csv("data/winequality-red.csv") #replace '...' with the location of the csv file!
# Task 1: Simple OLS Regression
# 1. Regress `pH` on `residual sugar` (so `pH` is the *dependent* variable)
lm(pH ~ `residual sugar`,
data = wine)
# 2.Using the exact coefficients, calculate the predicted pH value when residual sugar = 2
print(3.334924 + -0.009379*2)
# Task 2: Exporting Simple Regression Output
#1. Regress `pH` on `residual sugar` (so `pH` is the *dependent* variable) and assign the output to an object with a name you prefer.
#Export the output to an html file using the stargazer function
my_first_regression <- lm(pH ~ `residual sugar`,
data = wine)
stargazer(my_first_regression,
out = "my_first_regression.html",
type = "html")
# Task 3: Multiple Regression
#1. Regress `quality` on `alcohol`, `sulphates`, their interaction, and control for `chlorides`
my_second_regression <- lm(quality ~ alcohol*sulphates + chlorides,
data = wine)
stargazer(my_second_regression,
out = "my_second_regression.html",
type = "html")
ggplot(data=wine)+
geom_point(mapping=aes(x = `fixed acidity`,
y = alcohol)) +
labs(title = 'Alcohol by Fixed Acidity',
x = 'Fixed Acidity',
y = 'Alcohol')
acidity_avg_alcohol <- wine %>%
group_by(`fixed acidity`) %>%
summarise(avg_alcohol = mean(alcohol))
g_alco_acid <- ggplot(data=acidity_avg_alcohol)+
geom_point(mapping=aes(x = `fixed acidity`,
y = avg_alcohol)) +
labs(title = 'Mean Alcohol by Fixed Acidity',
x = 'Fixed Acidity',
y = 'Mean Alcohol')
acidity_avg_alcohol <- wine %>%
group_by(`fixed acidity`) %>%
summarise(avg_alcohol = mean(alcohol))
ggplot(data=acidity_avg_alcohol)+
geom_point(mapping=aes(x = `fixed acidity`,
y = avg_alcohol)) +
labs(title = 'Mean Alcohol by Fixed Acidity',
x = 'Fixed Acidity',
y = 'Mean Alcohol')
gc()
load("C:/Users/jeroe/Dropbox/VU teaching/Quantitative Research Methods/data/Enterprise-Survey/netherlands-2020.RData")
View(netherlands_2020)
table(netherlands_2020$a7a)
library(tidyverse)
library(tidyverse)
netherlands_2020 %>%
mutate(a7a = replace_na(a7a, -9))
library(tidyverse)
netherlands_2020 %>%
mutate(a7a = replace_na(a7a, -9))
table(a7a)
library(tidyverse)
netherlands_2020 %>%
mutate(a7a = replace_na(a7a, -9))
table(netherlands_2020$a7a)
library(tidyverse)
netherlands_2020 %>%
mutate(a7a = replace(a7a, -9, NA))
table(netherlands_2020$a7a)
library(tidyverse)
netherlands_2020 %>%
mutate(a7a = na_if(a7a, -9))
table(netherlands_2020$a7a)
library(tidyverse)
df = netherlands_2020 %>%
mutate(a7a = na_if(a7a, -9))
table(netherlands_2020$a7a)
library(tidyverse)
df = netherlands_2020 %>%
mutate(a7a = na_if(a7a, -9))
table(df$a7a)
